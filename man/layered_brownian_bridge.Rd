% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{layered_brownian_bridge}
\alias{layered_brownian_bridge}
\title{Layered Brownian Bridge sampler (Algorithm 33 in ST329)}
\usage{
layered_brownian_bridge(x, y, s, t, bessel_layer, times, remove_m = TRUE)
}
\arguments{
\item{x}{start value of Brownian bridge}

\item{y}{end value of Brownian bridge}

\item{s}{start value of Brownian bridge}

\item{t}{end value of Brownian bridge}

\item{times}{vector of real numbers to simulate Bessel bridge}

\item{remove_m}{boolean to indicate whether or not simulated minimum or 
maximum is removed (default is TRUE)}

\item{a}{vector/sequence of numbers}

\item{l}{integer number denoting Bessel layer, i.e. Brownian bridge 
is contained in [min(x,y)-a[l], max(x,y)+a[l]]}
}
\value{
matrix of the simulated layered Brownian bridge path, 
        first row is points X, second row are corresponding times
}
\description{
Simulation of a layered Brownian Bridge given a Bessel layer at user specified times
}
\examples{
# simulate Bessel layer
bes_layer <- bessel_layer_simulation(x = 0,
                                     y = 0,
                                     s = 0,
                                     t = 1,
                                     mult = 0.2)
# simulate layered Brownian bridge
# simulated minimum or maximum is removed
layered_brownian_bridge(x = 0,
                        y = 0,
                        s = 0,
                        t = 1,
                        bessel_layer = bes_layer,
                        times = seq(0.2, 0.8, 0.2))
# simulated minimum or maximum is kept
layered_brownian_bridge(x = 0,
                        y = 0,
                        s = 0,
                        t = 1,
                        bessel_layer = bes_layer,
                        times = seq(0.2, 0.8, 0.2),
                        remove_m = FALSE)

# another example
# simulated minimum or maximum is removed
start <- runif(1, -1, 1)
end <- runif(1, -1, 1)
bes_layer <- bessel_layer_simulation(x = start, y = end, s = 0, t = 1, mult = 0.2)
path <- layered_brownian_bridge(x = start,
                                y = end,
                                s = 0,
                                t = 1,
                                bessel_layer = bes_layer,
                                times = seq(0, 1, 0.01))
plot(x = path['time',], y = path['X',], pch = 20, xlab = 'Time', ylab = 'X',
     ylim = c(bes_layer$L, bes_layer$U))
lines(x = path['time',], y = path['X',])
abline(h=c(bes_layer$L, bes_layer$U), col = 'red')
abline(h=c(bes_layer$l, bes_layer$u), col = 'red', lty = 2)

# simulated miniumum or maximum is kept
start <- runif(1, -1, 1)
end <- runif(1, -1, 1)
bes_layer <- bessel_layer_simulation(x = start, y = end, s = 0, t = 1, mult = 0.2)
path <- layered_brownian_bridge(x = start,
                                y = end,
                                s = 0,
                                t = 1,
                                bessel_layer = bes_layer,
                                times = seq(0, 1, 0.01),
                                remove_m = FALSE)
plot(x = path['time',], y = path['X',], pch = 20, xlab = 'Time', ylab = 'X',
     ylim = c(bes_layer$L, bes_layer$U))
lines(x = path['time',], y = path['X',])
abline(h=c(bes_layer$L, bes_layer$U), col = 'red')
abline(h=c(bes_layer$l, bes_layer$u), col = 'red', lty = 2)

}
