% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gamma_coin_intervals}
\alias{gamma_coin_intervals}
\title{Gamma coin flipper for intervals}
\usage{
gamma_coin_intervals(x, y, s, t, l, v, k)
}
\arguments{
\item{x}{vector of values}

\item{y}{vector of values}

\item{s}{vector of values}

\item{t}{vector of values}

\item{l}{lower bound of Brownian bridge}

\item{v}{upper bound of Brownian bridge}

\item{k}{integer value}
}
\value{
boolean value: if T, accept probability that Brownian bridge remains in [l,v], otherwise reject
}
\description{
Flips 'Gamma coin' for intervals; takes the product of the Cauchy sequence S^{gamma}_{k} to 
determine whether or not the Brownian bridge remains in the interval [l,v]
Vectors x, y, s, t should all be the same length, L, where for i = 1, ..., L, the Brownian Bridge skeleton 
we have is broken up so that x[i] goes to y[i] between s[i] and t[i] - see example
}
\examples{
# setting up vectors
x_vect <- c(); y_vect <- c(); s_vect <- c(); t_vect <- c()
brownian_bridge <- matrix(c(0, 0, -0.2, 0.4, 1, 1), ncol = 3, nrow = 2)
for (i in 1:(ncol(brownian_bridge)-1)) {
  x_vect[i] <- brownian_bridge[1,i]
  y_vect[i] <- brownian_bridge[1,(i+1)]
  s_vect[i] <- brownian_bridge[2,i]
  t_vect[i] <- brownian_bridge[2,(i+1)]
}

# flip gamma coin whether or not Brownian bridge remains in [-0.5, 1.5]
gamma_coin_intervals(x = x_vect, y = y_vect, s = s_vect, t = t_vect, l = -0.5, v = 1.5, k = 1)

}
